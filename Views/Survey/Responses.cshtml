@using SurveyTest.Entities;
@using SurveyTest.Helpers;
@model PaginatedList<Survey>
@{
    ViewData["Title"] = "Responses";
}

@if(TempData["success"]!=null){
    <h2>@TempData["success"]</h2>
}
<h1 class="text-center p-3">Election Survey</h1>
@if (Model != null && Model.Count() != 0)
{
<div class="row">
    <table class="table">
  <thead>
    <tr>
       <th scope="col">Name</th>
      <th scope="col">Age</th>
      <th scope="col">Gender</th>
      <th scope="col">Response</th>
    </tr>
  </thead>
  <tbody>
    @foreach (var item in Model)
    {
    <tr>
      <td>@item.Name</td>
      <td>@item.Age</td>
      <td>@item.Gender</td>
      <td>@item.Question</td>
    </tr>
    }
  </tbody>
</table>
    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }
  
</div>
<div class="">
      <a asp-action="Responses" asp-route-pageNumber="@(Model.PageIndex-1)" class="btn btn-default @prevDisabled">
        Previous
    </a>
        <a asp-action="Responses" asp-route-pageNumber="@(Model.PageIndex+1)" class="btn btn-default @nextDisabled">
        Next
    </a>
</div>

@await Component.InvokeAsync("PieChart")
}
else{
    <h1>No survey to display</h1>
}